<?xml version="1.0"?>

<robot
    xmlns:xacro="http://ros.org/wiki/xacro"
    xmlns:interface="http://ros.org/wiki/xacro">

    <xacro:include filename="$(find hector_tracked_vehicles_description)/urdf/tracked_wheel.urdf.xacro" />
    <xacro:include filename="$(find hector_tracked_vehicles_description)/urdf/jasmine_ugv_tracks.urdf.xacro" />
    <xacro:include filename="$(find hector_xacro_tools)/urdf/inertia_tensors.urdf.xacro" />


    <!-- Properties (Constants) -->
    <xacro:property name="M_PI" value="3.14159"/>

    <xacro:property name="base_size_x" value="0.255" />
    <xacro:property name="base_size_y" value="0.12" />
    <xacro:property name="base_size_z" value="0.045" />

    <xacro:property name="wheel_radius_big" value="0.080" />
    <xacro:property name="wheel_length" value="0.02" />
    <xacro:property name="wheel_size_y" value="0.0825" />

    <xacro:property name="track_width" value="0.0825" />

    <xacro:property name="total_width" value="0.297" />
    <!--    <xacro:property name="wheel_offset_y" value="${(total_width - wheel_size_y) / 2}" />-->
    <xacro:property name="wheel_offset_y" value="0.1697" />
    <xacro:property name="wheel_offset_z_from_base_link" value="-0.0" />

    <xacro:property name="ground_clearance" value="0.05" />

    <xacro:property name="flipper_offset_x" value="-0.04" />


    <xacro:property name="top_size_x" value="0.3937" />
    <xacro:property name="top_size_y" value="0.3556" />
    <xacro:property name="top_size_z" value="0.0020" />

    <xacro:macro name="tankbot_macro">

        <xacro:arg name="add_default_geom" default="true"/>
        <xacro:arg name="add_containment_self_filter_geom" default="false"/>
        <xacro:arg name="add_raycast_self_filter_geom" default="false"/>

        <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
             navigation stack depends on this frame -->
       <link name="base_footprint">
            <inertial>
                <mass value="0.0001" />
                <origin xyz="0 0 0" />
                <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                         iyy="0.0001" iyz="0.0"
                         izz="0.0001" />
            </inertial>

            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
                <material name="Green" >
                    <color rgba="0 0.8 0 1"/>
                </material>
            </visual>

        </link>

        <joint name="base_footprint_joint" type="fixed">
            <origin xyz="0 0 ${base_size_z/2 + 0.051}" rpy="0 0 0" />

            <parent link="base_footprint"/>
            <child link="base_link" />
        </joint>

        <!-- Links and Joints (i.e., the robot) -->
        <link name="base_link">
          <xacro:inertial_cuboid_with_pose mass="25" x_length="${base_size_x*2}" y_length="${base_size_y*2}" z_length="${base_size_z*2}" >
            <origin xyz="0 0 0 " rpy="0 0 0" />
          </xacro:inertial_cuboid_with_pose>


            <visual>
                <origin xyz="0.0 0.0 -0.085" rpy="0 0 0" />
                <geometry>
                    <!--<box size="${base_size_x} ${base_size_y} ${base_size_z}" />-->
                    <mesh filename="package://hector_tracked_vehicles_description/meshes/jasmine_ugv/jasmine_ugv_simple_colored_v001.dae"/>
                </geometry>
                <material name="Grey" >
                    <color rgba="0.8 0.8 0.8 1"/>
                </material>
            </visual>

            <!--Optional visualization of detailed mesh-->

            <visual>
                <origin xyz="0.0 0.0 -0.049" rpy="0 0 0" />
                <geometry>
                    <!-- <mesh filename="package://hector_tracked_vehicles_description/meshes/jasmine_ugv/jasmine_2018_chassis_low_poly_velodyne.stl" scale="0.001 0.001 0.001"/> -->
                </geometry>
                <material name="Grey" >
                    <color rgba="0.8 0.8 0.8 1"/>
                </material>
            </visual>

            <xacro:if value="$(arg add_default_geom)">
              <xacro:jasmine_ugv_tracks t_base_size_x="${base_size_x}"  t_base_size_y="${base_size_y}" t_base_size_z="${base_size_z}" t_flipper_offset_x="${flipper_offset_x}" t_wheel_offset_y="${wheel_offset_y}" t_wheel_radius_big="${wheel_radius_big}" t_track_width="${track_width}">
              </xacro:jasmine_ugv_tracks>
            </xacro:if>

            <!--Make tracks larger for self filtering-->
            <xacro:if value="$(arg add_containment_self_filter_geom)">
              <xacro:jasmine_ugv_tracks t_base_size_x="${base_size_x}"  t_base_size_y="${base_size_y}" t_base_size_z="${base_size_z}" t_flipper_offset_x="${flipper_offset_x}" t_wheel_offset_y="${wheel_offset_y}" t_wheel_radius_big="${wheel_radius_big*1.3}" t_track_width="${track_width}">
              </xacro:jasmine_ugv_tracks>

              <!--
              <collision>
                <origin xyz="0.2 0.04 0.15" rpy="0 0 0" />
                <geometry>
                    <box size="${0.1} ${0.2} ${0.15}" />
                </geometry>
              </collision>
              -->
            </xacro:if>

            <!--Make tracks larger for self filtering-->
            <xacro:if value="$(arg add_raycast_self_filter_geom)">
              <xacro:jasmine_ugv_tracks t_base_size_x="${base_size_x}"  t_base_size_y="${base_size_y}" t_base_size_z="${base_size_z}" t_flipper_offset_x="${flipper_offset_x}" t_wheel_offset_y="${wheel_offset_y}" t_wheel_radius_big="${wheel_radius_big*1.3}" t_track_width="${track_width}">
              </xacro:jasmine_ugv_tracks>

            </xacro:if>


        </link>


    <gazebo reference="base_link">
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>1.0</maxVel>
    </gazebo>

    <gazebo>
      <plugin name="force_based_move_controller" filename="libgazebo_ros_force_based_move.so">
        <commandTopic>/cmd_vel_raw</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometryRate>20.0</odometryRate>
        <robotBaseFrame>base_link</robotBaseFrame>
        <yaw_velocity_p_gain>500</yaw_velocity_p_gain>
        <x_velocity_p_gain>3000</x_velocity_p_gain>
        <y_velocity_p_gain>3000</y_velocity_p_gain>
        <publishOdometryTf>1</publishOdometryTf>
      </plugin>

      <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>50.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>ground_truth/state</topicName>
        <gaussianNoise>0.01</gaussianNoise>
        <frameName>world</frameName>
        <xyzOffsets>0 0 0</xyzOffsets>
        <rpyOffsets>0 0 0</rpyOffsets>
      </plugin>

      <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>50.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>imu_quat</topicName>
        <accelDrift>0.0 0.0 0.0</accelDrift>
        <accelGaussianNoise>0.1 0.1 0.1</accelGaussianNoise>
        <rateDrift>0.0 0.0 0.0</rateDrift>
        <rateGaussianNoise>0.05 0.05 0.05</rateGaussianNoise>
        <headingDrift>0.0</headingDrift>
        <headingGaussianNoise>0.05</headingGaussianNoise>
      </plugin>


    </gazebo>


    </xacro:macro>
</robot>
